services:
  postgres:
    image: postgres:15
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U airflow" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  docker:
    image: docker:27-dind
    privileged: true
    command: ["--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
    environment:
      - DOCKER_TLS_CERTDIR=
    volumes:
      - docker-data:/var/lib/docker
      - ../.:/workspace:ro
    networks:
      default:
        aliases: [dind, docker]
      optasia_db:
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  airflow:
    image: apache/airflow:3.0.1-python3.12
    container_name: airflow-dev
    entrypoint: [ "airflow", "standalone" ]
    depends_on:
      postgres:
        condition: service_healthy
      docker:
        condition: service_healthy
    environment:
      # Airflow core
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_ALL_ADMINS=True
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow

      # Optional: make a Docker connection that points to DinD (your DAG can still pass docker_url explicitly)
      - AIRFLOW_CONN_DOCKER_DEFAULT=docker://dind?base_url=tcp://dind:2375

      # Your existing app connections (Airflow container is on optasia_db so 'db' resolves)
      - AIRFLOW_CONN_POSTGRES_CONN=postgresql+psycopg2://testuser:password@db:5432/optasia
      - AIRFLOW_CONN_HDFS_CONN=http://namenode:9870/
    networks:
      - default
      - optasia_db
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs

volumes:
  airflow-logs:
  pgdata:
  docker-data:


networks:
  optasia_db:
    external: true
